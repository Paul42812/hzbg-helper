{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/ol/util.js","./node_modules/ol/AssertionError.js","./node_modules/ol/events/Event.js","./node_modules/ol/ObjectEventType.js","./node_modules/ol/Disposable.js","./node_modules/ol/array.js","./node_modules/ol/functions.js","./node_modules/ol/obj.js","./node_modules/ol/events/Target.js","./node_modules/ol/events/EventType.js","./node_modules/ol/events.js","./node_modules/ol/Observable.js","./node_modules/ol/Object.js","./node_modules/ol/CollectionEventType.js","./node_modules/ol/Collection.js","./node_modules/ol/asserts.js","./node_modules/ol/Feature.js","./node_modules/ol/transform.js","./node_modules/ol/extent/Corner.js","./node_modules/ol/extent/Relationship.js","./node_modules/ol/extent.js","./node_modules/ol/math.js","./node_modules/ol/color.js","./node_modules/ol/style/IconImageCache.js","./node_modules/ol/layer/Property.js","./node_modules/ol/layer/Base.js","./node_modules/ol/render/EventType.js","./node_modules/ol/source/State.js","./node_modules/ol/layer/Layer.js","./node_modules/ol/coordinate.js","./node_modules/ol/renderer/Map.js","./node_modules/ol/render/Event.js","./node_modules/ol/css.js","./node_modules/ol/has.js","./node_modules/ol/dom.js","./node_modules/ol/render/canvas.js","./node_modules/ol/renderer/Composite.js","./node_modules/ol/layer/Group.js","./node_modules/ol/MapEvent.js","./node_modules/ol/MapBrowserEvent.js","./node_modules/ol/MapBrowserEventType.js","./node_modules/ol/pointer/EventType.js","./node_modules/ol/MapBrowserEventHandler.js","./node_modules/ol/MapEventType.js","./node_modules/ol/MapProperty.js","./node_modules/ol/structs/PriorityQueue.js","./node_modules/ol/TileState.js","./node_modules/ol/TileQueue.js","./node_modules/ol/geom/GeometryType.js","./node_modules/ol/proj/Units.js","./node_modules/ol/ViewHint.js","./node_modules/ol/ViewProperty.js","./node_modules/ol/tilegrid/common.js","./node_modules/ol/proj/Projection.js","./node_modules/ol/proj/epsg3857.js","./node_modules/ol/proj/epsg4326.js","./node_modules/ol/proj/projections.js","./node_modules/ol/proj/transforms.js","./node_modules/ol/sphere.js","./node_modules/ol/proj.js","./node_modules/ol/centerconstraint.js","./node_modules/ol/resolutionconstraint.js","./node_modules/ol/rotationconstraint.js","./node_modules/ol/easing.js","./node_modules/ol/geom/GeometryLayout.js","./node_modules/ol/geom/flat/transform.js","./node_modules/ol/geom/Geometry.js","./node_modules/ol/geom/SimpleGeometry.js","./node_modules/ol/geom/flat/closest.js","./node_modules/ol/geom/flat/deflate.js","./node_modules/ol/geom/flat/simplify.js","./node_modules/ol/geom/flat/inflate.js","./node_modules/ol/geom/flat/area.js","./node_modules/ol/geom/LinearRing.js","./node_modules/ol/geom/Point.js","./node_modules/ol/geom/flat/contains.js","./node_modules/ol/geom/flat/interiorpoint.js","./node_modules/ol/geom/flat/segments.js","./node_modules/ol/geom/flat/intersectsextent.js","./node_modules/ol/geom/flat/reverse.js","./node_modules/ol/geom/flat/orient.js","./node_modules/ol/geom/Polygon.js","./node_modules/ol/View.js","./node_modules/ol/size.js","./node_modules/ol/PluggableMap.js","./node_modules/ol/control/Control.js","./node_modules/ol/control/Attribution.js","./node_modules/ol/control/Rotate.js","./node_modules/ol/control/Zoom.js","./node_modules/ol/interaction/Property.js","./node_modules/ol/interaction/Interaction.js","./node_modules/ol/interaction/DoubleClickZoom.js","./node_modules/ol/interaction/Pointer.js","./node_modules/ol/events/condition.js","./node_modules/ol/interaction/DragPan.js","./node_modules/ol/interaction/DragRotate.js","./node_modules/ol/render/Box.js","./node_modules/ol/interaction/DragBox.js","./node_modules/ol/interaction/DragZoom.js","./node_modules/ol/events/KeyCode.js","./node_modules/ol/interaction/KeyboardPan.js","./node_modules/ol/interaction/KeyboardZoom.js","./node_modules/ol/Kinetic.js","./node_modules/ol/interaction/MouseWheelZoom.js","./node_modules/ol/interaction/PinchRotate.js","./node_modules/ol/interaction/PinchZoom.js","./node_modules/ol/Map.js","./node_modules/ol/control.js","./node_modules/ol/interaction.js","./node_modules/ol/geom/GeometryCollection.js","./node_modules/ol/format/Feature.js","./node_modules/ol/format/FormatType.js","./node_modules/ol/format/JSONFeature.js","./node_modules/ol/geom/flat/interpolate.js","./node_modules/ol/geom/flat/length.js","./node_modules/ol/geom/LineString.js","./node_modules/ol/geom/MultiLineString.js","./node_modules/ol/geom/MultiPoint.js","./node_modules/ol/geom/MultiPolygon.js","./node_modules/ol/geom/flat/center.js","./node_modules/ol/format/GeoJSON.js","./node_modules/ol/layer/TileProperty.js","./node_modules/ol/layer/BaseTile.js","./node_modules/ol/ImageState.js","./node_modules/ol/renderer/Layer.js","./node_modules/ol/renderer/canvas/Layer.js","./node_modules/ol/TileRange.js","./node_modules/ol/renderer/canvas/TileLayer.js","./node_modules/ol/layer/Tile.js","./node_modules/rbush/rbush.min.js","./node_modules/ol/style/Image.js","./node_modules/ol/colorlike.js","./node_modules/ol/style/RegularShape.js","./node_modules/ol/style/Circle.js","./node_modules/ol/style/Fill.js","./node_modules/ol/style/Stroke.js","./node_modules/ol/style/Style.js","./node_modules/ol/layer/BaseVector.js","./node_modules/ol/render/canvas/Instruction.js","./node_modules/ol/render/VectorContext.js","./node_modules/ol/render/canvas/Builder.js","./node_modules/ol/render/canvas/ImageBuilder.js","./node_modules/ol/render/canvas/LineStringBuilder.js","./node_modules/ol/render/canvas/PolygonBuilder.js","./node_modules/ol/style/TextPlacement.js","./node_modules/ol/geom/flat/straightchunk.js","./node_modules/ol/render/canvas/TextBuilder.js","./node_modules/ol/render/canvas/BuilderGroup.js","./node_modules/ol/render/canvas/BuilderType.js","./node_modules/ol/geom/flat/textpath.js","./node_modules/ol/render/canvas/Executor.js","./node_modules/ol/render/canvas/ExecutorGroup.js","./node_modules/ol/render/canvas/Immediate.js","./node_modules/ol/style/IconAnchorUnits.js","./node_modules/ol/style/IconOrigin.js","./node_modules/ol/ImageBase.js","./node_modules/ol/Image.js","./node_modules/ol/style/IconImage.js","./node_modules/ol/style/Icon.js","./node_modules/ol/style/Text.js","./node_modules/ol/renderer/vector.js","./node_modules/ol/renderer/canvas/VectorLayer.js","./node_modules/ol/render/canvas/hitdetect.js","./node_modules/ol/layer/Vector.js","./node_modules/ol/structs/RBush.js","./node_modules/ol/source/Source.js","./node_modules/ol/source/VectorEventType.js","./node_modules/ol/loadingstrategy.js","./node_modules/ol/featureloader.js","./node_modules/ol/source/Vector.js","./node_modules/ol/Tile.js","./node_modules/ol/ImageTile.js","./node_modules/ol/reproj.js","./node_modules/ol/reproj/Triangulation.js","./node_modules/ol/source/common.js","./node_modules/ol/reproj/Tile.js","./node_modules/ol/reproj/common.js","./node_modules/ol/structs/LRUCache.js","./node_modules/ol/tilecoord.js","./node_modules/ol/TileCache.js","./node_modules/ol/source/TileEventType.js","./node_modules/ol/tilegrid/TileGrid.js","./node_modules/ol/tilegrid.js","./node_modules/ol/source/Tile.js","./node_modules/ol/tileurlfunction.js","./node_modules/ol/source/UrlTile.js","./node_modules/ol/source/TileImage.js","./node_modules/ol/source/XYZ.js","./node_modules/ol/source/OSM.js","./index.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_ = {};\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.CIRCLE) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (builderEnd > builderBegin) {\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n            }\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];\n        return result;\n    }\n    var previousAngle;\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            if (!declutterImageWithText[d]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[d] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[d];\n                            delete declutterImageWithText[d];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        this.renderWorlds(replayGroup, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(): void=} success Success\n     *      Function called when loading succeeded.\n     * @param {function(): void=} failure Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            if (success !== undefined) {\n                success(features);\n            }\n            source.addFeatures(features);\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","import 'ol/ol.css';\nimport {Collection, Feature, Map, View} from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Point from 'ol/geom/Point';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport OSM from 'ol/source/OSM';\nimport {Fill, Icon, Stroke, Style, Text} from 'ol/style';\nimport sVector from 'ol/source/Vector';\nimport lVector from 'ol/layer/Vector';\n\nvar file =  `src/Alois Webergasse/DSC_1272.JPG\nsrc/Alois Webergasse/DSC_1273.JPG\nsrc/Am Hainer Berg/DSC01552.JPG\nsrc/Am Hainer Berg/DSC01553.JPG\nsrc/Am Hainer Berg/DSC02951.JPG\nsrc/Am Hainer Berg/DSC02952.JPG\nsrc/Am Hainer Berg/DSC02953.JPG\nsrc/Am Hainer Berg/DSC02954.JPG\nsrc/Am Hainer Berg/DSC02955.JPG\nsrc/Am Hainer Berg/DSC02956.JPG\nsrc/Am Hainer Berg/DSC02957.JPG\nsrc/Am Hainer Berg/DSC_3539.JPG\nsrc/Am Hainer Berg/DSC_3540.JPG\nsrc/Am Hainer Berg/DSC_3541.JPG\nsrc/Am Hainer Berg/DSC_3542.JPG\nsrc/Am Hainer Berg/DSC_3543.JPG\nsrc/Am Hainer Berg/DSC_3544.JPG\nsrc/Am Hainer Berg/DSC_3547.JPG\nsrc/Am Hainer Berg/IMG_1158.JPG\nsrc/Am Hainer Berg/IMG_1159.JPG\nsrc/Am Hainer Berg/IMG_1160.JPG\nsrc/Am Hainer Berg/IMG_1325.JPG\nsrc/Am Hainer Berg/IMG_1327.JPG\nsrc/Am Hainer Berg/IMG_2709.JPG\nsrc/Ansichten Herzogenburg/DSC00857.JPG\nsrc/Ansichten Herzogenburg/DSC00858.JPG\nsrc/Ansichten Herzogenburg/DSC00859.JPG\nsrc/Ansichten Herzogenburg/DSC00860.JPG\nsrc/Ansichten Herzogenburg/DSC00861.JPG\nsrc/Ansichten Herzogenburg/DSC00862.JPG\nsrc/Ansichten Herzogenburg/DSC00863.JPG\nsrc/Ansichten Herzogenburg/DSC00864.JPG\nsrc/Ansichten Herzogenburg/DSC00865.JPG\nsrc/Ansichten Herzogenburg/DSC00866.JPG\nsrc/Ansichten Herzogenburg/DSC00867.JPG\nsrc/Ansichten Herzogenburg/DSC00868.JPG\nsrc/Ansichten Herzogenburg/DSC00869.JPG\nsrc/Ansichten Herzogenburg/DSC00870.JPG\nsrc/Ansichten Herzogenburg/DSC00871.JPG\nsrc/Ansichten Herzogenburg/DSC00872.JPG\nsrc/Ansichten Herzogenburg/DSC00873.JPG\nsrc/Ansichten Herzogenburg/DSC00874.JPG\nsrc/Ansichten Herzogenburg/DSC00875.JPG\nsrc/Ansichten Herzogenburg/DSC00876.JPG\nsrc/Ansichten Herzogenburg/DSC00877.JPG\nsrc/Ansichten Herzogenburg/DSC_1573.JPG\nsrc/Ansichten Herzogenburg/DSC_1574.JPG\nsrc/Ansichten Herzogenburg/DSC_1575.JPG\nsrc/Ansichten Herzogenburg/DSC_1615.JPG\nsrc/Ansichten Herzogenburg/DSC_1616.JPG\nsrc/Ansichten Herzogenburg/DSC_1617.JPG\nsrc/Ansichten Herzogenburg/DSC_1619.JPG\nsrc/Ansichten Herzogenburg/DSC_1620.JPG\nsrc/Ansichten Herzogenburg/DSC_1621.JPG\nsrc/Ansichten Herzogenburg/DSC_1622.JPG\nsrc/Ansichten Herzogenburg/DSC_1623.JPG\nsrc/Ansichten Herzogenburg/DSC_1624.JPG\nsrc/Ansichten Herzogenburg/DSC_1625.JPG\nsrc/Ansichten Herzogenburg/DSC_1626.JPG\nsrc/Ansichten Herzogenburg/DSC_1627.JPG\nsrc/Ansichten Herzogenburg/DSC_1628.JPG\nsrc/Ansichten Herzogenburg/DSC_1629.JPG\nsrc/Ansichten Herzogenburg/DSC_1630.JPG\nsrc/Ansichten Herzogenburg/DSC_1631.JPG\nsrc/Ansichten Herzogenburg/DSC_1632.JPG\nsrc/Ansichten Herzogenburg/DSC_1633.JPG\nsrc/Ansichten Herzogenburg/DSC_1634.JPG\nsrc/Ansichten Herzogenburg/DSC_1635.JPG\nsrc/Ansichten Herzogenburg/DSC_1636.JPG\nsrc/Ansichten Herzogenburg/DSC_1637.JPG\nsrc/Ansichten Herzogenburg/DSC_1638.JPG\nsrc/Ansichten Herzogenburg/DSC_1639.JPG\nsrc/Ansichten Herzogenburg/DSC_1640.JPG\nsrc/Ansichten Herzogenburg/DSC_1641.JPG\nsrc/Ansichten Herzogenburg/DSC_1642.JPG\nsrc/Ansichten Herzogenburg/DSC_1643.JPG\nsrc/Ansichten Herzogenburg/DSC_1646.JPG\nsrc/Ansichten Herzogenburg/DSC_1647.JPG\nsrc/Ansichten Herzogenburg/DSC_1648.JPG\nsrc/Ansichten Herzogenburg/DSC_1649.JPG\nsrc/Ansichten Herzogenburg/DSC_1650.JPG\nsrc/Ansichten Herzogenburg/DSC_1651.JPG\nsrc/Ansichten Herzogenburg/DSC_1652.JPG\nsrc/Ansichten Herzogenburg/DSC_1653.JPG\nsrc/Ansichten Herzogenburg/DSC_1654.JPG\nsrc/Ansichten Herzogenburg/DSC_1655.JPG\nsrc/Ansichten Herzogenburg/DSC_1656.JPG\nsrc/Ansichten Herzogenburg/DSC_1657.JPG\nsrc/Ansichten Herzogenburg/DSC_1658.JPG\nsrc/Ansichten Herzogenburg/DSC_1659.JPG\nsrc/Ansichten Herzogenburg/DSC_1660.JPG\nsrc/Ansichten Herzogenburg/DSC_1661.JPG\nsrc/Ansichten Herzogenburg/DSC_1662.JPG\nsrc/Ansichten Herzogenburg/DSC_1663.JPG\nsrc/Ansichten Herzogenburg/DSC_1664.JPG\nsrc/Ansichten Herzogenburg/DSC_1665.JPG\nsrc/Ansichten Herzogenburg/DSC_1666.JPG\nsrc/Ansichten Herzogenburg/DSC_1667.JPG\nsrc/Ansichten Herzogenburg/DSC_1668.JPG\nsrc/Ansichten Herzogenburg/DSC_1669.JPG\nsrc/Ansichten Herzogenburg/DSC_1670.JPG\nsrc/Ansichten Herzogenburg/DSC_1671.JPG\nsrc/Ansichten Herzogenburg/DSC_1672.JPG\nsrc/Ansichten Herzogenburg/DSC_1673.JPG\nsrc/Ansichten Herzogenburg/DSC_1674.JPG\nsrc/Ansichten Herzogenburg/DSC_1675.JPG\nsrc/Ansichten Herzogenburg/DSC_1676.JPG\nsrc/Ansichten Herzogenburg/DSC_1677.JPG\nsrc/Ansichten Herzogenburg/DSC_1678.JPG\nsrc/Ansichten Herzogenburg/DSC_1679.JPG\nsrc/Ansichten Herzogenburg/DSC_1680.JPG\nsrc/Ansichten Herzogenburg/DSC_1681.JPG\nsrc/Ansichten Herzogenburg/DSC_1682.JPG\nsrc/Ansichten Herzogenburg/DSC_1683.JPG\nsrc/Ansichten Herzogenburg/DSC_1684.JPG\nsrc/Ansichten Herzogenburg/DSC_1685.JPG\nsrc/Ansichten Herzogenburg/DSC_1686.JPG\nsrc/Ansichten Herzogenburg/DSC_1687.JPG\nsrc/Ansichten Herzogenburg/DSC_1688.JPG\nsrc/Ansichten Herzogenburg/DSC_1689.JPG\nsrc/Ansichten Herzogenburg/DSC_1690.JPG\nsrc/Ansichten Herzogenburg/DSC_1691.JPG\nsrc/Ansichten Herzogenburg/DSC_1692.JPG\nsrc/Ansichten Herzogenburg/DSC_1693.JPG\nsrc/Ansichten Herzogenburg/DSC_1694.JPG\nsrc/Ansichten Herzogenburg/DSC_1695.JPG\nsrc/Ansichten Herzogenburg/DSC_1696.JPG\nsrc/Ansichten Herzogenburg/DSC_1697.JPG\nsrc/Ansichten Herzogenburg/DSC_1698.JPG\nsrc/Ansichten Herzogenburg/DSC_1699.JPG\nsrc/Ansichten Herzogenburg/DSC_1700.JPG\nsrc/Ansichten Herzogenburg/DSC_1701.JPG\nsrc/Ansichten Herzogenburg/DSC_1715.JPG\nsrc/Ansichten Herzogenburg/DSC_1716.JPG\nsrc/Ansichten Herzogenburg/DSC_1717.JPG\nsrc/Ansichten Herzogenburg/DSC_1718.JPG\nsrc/Ansichten Herzogenburg/DSC_1719.JPG\nsrc/Ansichten Herzogenburg/DSC_1911.JPG\nsrc/Ansichten Herzogenburg/DSC_1912.JPG\nsrc/Ansichten Herzogenburg/DSC_3550.JPG\nsrc/Ansichten Herzogenburg/DSC_3551.JPG\nsrc/Ansichten Herzogenburg/DSC_3552.JPG\nsrc/Ansichten Herzogenburg/DSC_3553.JPG\nsrc/Ansichten Herzogenburg/DSC_3554.JPG\nsrc/Ansichten Herzogenburg/DSC_3555.JPG\nsrc/Ansichten Herzogenburg/DSC_3556.JPG\nsrc/Ansichten Herzogenburg/DSC_3557.JPG\nsrc/Ansichten Herzogenburg/DSC_3558.JPG\nsrc/Ansichten Herzogenburg/DSC_3559.JPG\nsrc/Ansichten Herzogenburg/DSC_3560.JPG\nsrc/Ansichten Herzogenburg/DSC_3561.JPG\nsrc/Ansichten Herzogenburg/DSC_3562.JPG\nsrc/Ansichten Herzogenburg/DSC_4917.JPG\nsrc/Ansichten Herzogenburg/DSC_4918.JPG\nsrc/Ansichten Herzogenburg/DSC_4919.JPG\nsrc/Ansichten Herzogenburg/DSC_4920.JPG\nsrc/Ansichten Herzogenburg/DSC_4921.JPG\nsrc/Ansichten Herzogenburg/DSC_4922.JPG\nsrc/Ansichten Herzogenburg/DSC_4923.JPG\nsrc/Ansichten Herzogenburg/DSC_4924.JPG\nsrc/Ansichten Herzogenburg/DSC_4925.JPG\nsrc/Ansichten Herzogenburg/DSC_4926.JPG\nsrc/Ansichten Herzogenburg/DSC_4927.JPG\nsrc/Ansichten Herzogenburg/DSC_4928.JPG\nsrc/Ansichten Herzogenburg/DSC_4929.JPG\nsrc/Ansichten Herzogenburg/DSC_4930.JPG\nsrc/Ansichten Herzogenburg/DSC_4931.JPG\nsrc/Ansichten Herzogenburg/DSC_4932.JPG\nsrc/Ansichten Herzogenburg/DSC_4933.JPG\nsrc/Ansichten Herzogenburg/DSC_5011.JPG\nsrc/Ansichten Herzogenburg/DSC_5012.JPG\nsrc/Ansichten Herzogenburg/DSC_5023.JPG\nsrc/Ansichten Herzogenburg/DSC_5024.JPG\nsrc/Ansichten Herzogenburg/DSC_5028.JPG\nsrc/Ansichten Herzogenburg/DSC_5029.JPG\nsrc/Ansichten Herzogenburg/DSC_5035.JPG\nsrc/Ansichten Herzogenburg/DSC_5036.JPG\nsrc/Ansichten Herzogenburg/DSC_5037.JPG\nsrc/Ansichten Herzogenburg/DSC_5038.JPG\nsrc/Ansichten Herzogenburg/IMG_0249.JPG\nsrc/Ansichten Herzogenburg/IMG_0250.JPG\nsrc/Ansichten Herzogenburg/IMG_0251.JPG\nsrc/Ansichten Herzogenburg/IMG_0255.JPG\nsrc/Ansichten Herzogenburg/IMG_0256.JPG\nsrc/Ansichten Herzogenburg/IMG_0257.JPG\nsrc/Ansichten Herzogenburg/IMG_0258.JPG\nsrc/Ansichten Herzogenburg/IMG_0259.JPG\nsrc/Ansichten Herzogenburg/IMG_0260.JPG\nsrc/Ansichten Herzogenburg/STA_0244.JPG\nsrc/Ansichten Herzogenburg/STA_0252.JPG\nsrc/Ansichten Herzogenburg/STB_0245.JPG\nsrc/Ansichten Herzogenburg/STB_0253.JPG\nsrc/Ansichten Herzogenburg/STC_0246.JPG\nsrc/Ansichten Herzogenburg/STC_0254.JPG\nsrc/Ansichten Herzogenburg/STD_0247.JPG\nsrc/Ansichten Herzogenburg/STE_0248.JPG\nsrc/Abbruch Rathaus/20160506_141041.jpg\nsrc/Abbruch Rathaus/20160506_141048.jpg\nsrc/Abbruch Rathaus/20160506_141050.jpg\nsrc/Abbruch Rathaus/20160506_141053.jpg\nsrc/Abbruch Rathaus/20160506_141054.jpg\nsrc/Abbruch Rathaus/20160506_142042.jpg\nsrc/Abbruch Rathaus/20160506_142045.jpg\nsrc/Abbruch Rathaus/20160506_142049.jpg\nsrc/Am Hainer Berg/20191109_095446.jpg\nsrc/Am Hainer Berg/20191109_095448.jpg\nsrc/Am Hainer Berg/20191109_095539.jpg\nsrc/Am Hainer Berg/20191109_095552.jpg\nsrc/Am Hainer Berg/20191109_095600.jpg\nsrc/Am Hainer Berg/20191109_095608.jpg\nsrc/Am Hainer Berg/20191109_095629.jpg\nsrc/Am Hainer Berg/20191109_095635.jpg\nsrc/Am Hainer Berg/20191109_095707.jpg\nsrc/Am Hainer Berg/20191109_095734.jpg\nsrc/Am Hainer Berg/20191109_095809.jpg\nsrc/Am Hainer Berg/20191109_095830.jpg\nsrc/Am Hainer Berg/20191122_093246.jpg\nsrc/Am Hainer Berg/20191122_093319.jpg\nsrc/Am Hainer Berg/20191122_093326.jpg\nsrc/Am Hainer Berg/20200314_111505.jpg\nsrc/Am Hainer Berg/20200314_111507.jpg\nsrc/Am Hainer Berg/20200314_111509.jpg\nsrc/Am Hainer Berg/20200314_111537.jpg\nsrc/Am Hainer Berg/20200314_111630.jpg\nsrc/Am Hainer Berg/20200314_111633.jpg\nsrc/Am Hainer Berg/20200314_111635.jpg\nsrc/Andräersteg/20200124_134653.jpg\nsrc/Andräersteg/20200124_134720.jpg\nsrc/Andräersteg/20200124_134732.jpg\nsrc/Andräersteg/20200124_134739.jpg\nsrc/Andräersteg/20200124_134807.jpg\nsrc/Andräersteg/20200124_134828.jpg\nsrc/Andräersteg/20200124_134914.jpg\nsrc/Andräersteg/20200124_134920.jpg\nsrc/Andräersteg/20200124_134922.jpg\nsrc/Andräersteg/20200124_134928.jpg\nsrc/Andräersteg/20200124_135004.jpg\nsrc/Ansichten Herzogenburg/20191215_084823.jpg\nsrc/Ansichten Herzogenburg/20191215_084833.jpg\nsrc/Ansichten Herzogenburg/20200320_135940.jpg\nsrc/Ansichten Herzogenburg/20200320_135945.jpg\nsrc/Ansichten Herzogenburg/20200320_135955.jpg\nsrc/Ansichten Herzogenburg/20200331_140157.jpg\nsrc/Ansichten Herzogenburg/20200331_140204.jpg\nsrc/Ansichten Herzogenburg/20200331_140506.jpg\nsrc/Ansichten Herzogenburg/HZGB-ges1.jpg`;\n\napi = \"qaX2KO6jP_YPXxg9Sva2pZLBWfdrjNbFC9YEI71z1Gs\"\n\nvar index = 0\nvar files = file.split(\"\\n\")\n\ndocument.getElementById(\"frame\").src = files[index].replace(\"src\", \"https://paul42812.github.io/hzbg-assets/low/\");\ndocument.getElementById(\"name\").innerHTML = files[index].replace(\"src/\", \"\");\n\nvar view = new View({\n    center: fromLonLat([15.696389, 48.286111]),\n    zoom: 14,\n})\n\nfunction download(fileUrl, fileName) {\n  var a = document.createElement(\"a\");\n  a.href = fileUrl;\n  a.setAttribute(\"download\", fileName);\n  a.click();\n}\n\nconst apiKey = 'qaX2KO6jP_YPXxg9Sva2pZLBWfdrjNbFC9YEI71z1Gs';\n\nconst urlTpl =\n  'https://{1-4}.aerial.maps.ls.hereapi.com' +\n  '/maptile/2.1/maptile/newest/hybrid.day/{z}/{x}/{y}/256/png' +\n  '?apiKey=qaX2KO6jP_YPXxg9Sva2pZLBWfdrjNbFC9YEI71z1Gs'\n\nconst urlTpl2 =\n  'https://{1-4}.aerial.maps.ls.hereapi.com' +\n  '/maptile/2.1/maptile/newest/terrain.day/{z}/{x}/{y}/256/png' +\n  '?apiKey=qaX2KO6jP_YPXxg9Sva2pZLBWfdrjNbFC9YEI71z1Gs'\n\nconst urlTpl3 =\n  'https://{1-4}.aerial.maps.ls.hereapi.com' +\n  '/maptile/2.1/maptile/newest/satellite.day/{z}/{x}/{y}/256/png' +\n  '?apiKey=qaX2KO6jP_YPXxg9Sva2pZLBWfdrjNbFC9YEI71z1Gs'\n\nvar a = new TileLayer({\n      visible: true,\n      preload: Infinity,\n      source: new XYZ({\n        url: urlTpl,\n      }),\n    })\n\nvar c = new TileLayer({\n      visible: true,\n      preload: Infinity,\n      source: new XYZ({\n        url: urlTpl2,\n      }),\n    })\n\nvar d = new TileLayer({\n      visible: true,\n      preload: Infinity,\n      source: new XYZ({\n        url: urlTpl3,\n      }),\n    })\n\nvar b = new TileLayer({\n      source: new OSM(),\n    })\n\n\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    \n  ],\n  view: view,\n  interrections: new Collection()\n});\n\nmap.addLayer(b) //badc\n\nvar c = 1;\ndocument.body.onkeyup = function(e){\n    if(e.keyCode == 32){\n        map.removeLayer(a);\n        map.removeLayer(b);\n        map.removeLayer(c);\n        map.removeLayer(d);\n        c+=1\n        if (c==4){\n          c=1;\n        }\n        if (c == 1) {\n          map.addLayer(b);\n        }\n        if (c == 2) {\n          map.addLayer(a);\n        }\n        if (c == 3) {\n          map.addLayer(d);\n        }\n    }\n}\n\nvar q = 0;\ng = []\ndocument.getElementById(\"proq\").innerHTML = `${q}/${files.length}`\nmap.on('click', function(evt){\n    var b = ((toLonLat(evt.coordinate)).toString() + \":\" + files[index]);\n    g.push(b);\n    if (index < files.length - 1){\n      index+=1;\n    } else {\n      \n        var blob = new Blob([g], { type: \"text/txt;charset=utf-8\" });\n        saveAs(blob, \"data1.txt\")\n    }\n    q+=1;\n    document.getElementById(\"proq\").innerHTML = `${q}/${files.length}`\n    document.getElementById(\"frame\").src = files[index].replace(\"src/\", \"https://paul42812.github.io/hzbg-assets/low/\");\n    document.getElementById(\"name\").innerHTML = files[index].replace(\"src/\", \"\");\n\n    \n});"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$cd365e7aabd14aaf6df378f6a61e84d7$export$abstract","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$getUid","obj","ol_uid","String","extendStatics","$cd365e7aabd14aaf6df378f6a61e84d7$export$VERSION","$fd652548d0f540d94aaff6aa830746d2$var$__extends","d","b","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","this","constructor","create","$fd652548d0f540d94aaff6aa830746d2$export$default","_super","AssertionError","code","_this","message","split","name","$003acff01e79c0a73122c747343d2e59$export$default","BaseEvent","type","propagationStopped","target","preventDefault","stopPropagation","$f7bbc97715b7cef936b659025f276afb$export$default","Disposable","disposed","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$numberSafeCompareFunction","$7c21d7646a0313abf7b847efa68bfceb$export$linearFindNearest","arr","direction","length","i","$7c21d7646a0313abf7b847efa68bfceb$export$reverseSubArray","begin","end","tmp","$7c21d7646a0313abf7b847efa68bfceb$export$extend","data","extension","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$equals","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$TRUE","$8ff7925ef9afa7e69604ab9620edac22$export$FALSE","$8ff7925ef9afa7e69604ab9620edac22$export$VOID","$e1ac967f910869e98e549bfd20a1853c$export$assign","assign","var_sources","TypeError","output","ii","arguments","source","key","$e1ac967f910869e98e549bfd20a1853c$export$clear","object","property","$e1ac967f910869e98e549bfd20a1853c$export$getValues","values","push","$e1ac967f910869e98e549bfd20a1853c$export$isEmpty","$99fe3f3343ef18166bd431edc467d890$var$__extends","__extends","$99fe3f3343ef18166bd431edc467d890$export$default","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$7961378a294a4943979a10a4df4a3fcf$export$listen","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$listenOnce","$7961378a294a4943979a10a4df4a3fcf$export$unlistenByKey","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","$02e80757fefec0a9636ae28d17c9fab2$export$default","Observable","revision_","changed","getRevision","on","len","once","ol_key","un","$02e80757fefec0a9636ae28d17c9fab2$export$unByKey","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$export$ObjectEvent","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$export$default","BaseObject","opt_values","values_","setProperties","value","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$getChangeEventType","set","opt_silent","applyProperties","unset","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$CollectionEvent","CollectionEvent","opt_element","opt_index","element","$e6a59fbd122f687b33c2f382a3c7634b$export$default","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","clear","getLength","pop","extend","forEach","f","array","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","j","opt_except","$2ce41f61858dd350a0b2670bdab4e597$export$assert","assertion","errorCode","$fe05caf5f991aea82bd67c9bebabc467$var$__extends","$fe05caf5f991aea82bd67c9bebabc467$export$default","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","styles_1","getZIndex","$fe05caf5f991aea82bd67c9bebabc467$export$createStyleFunction","setId","id","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$apply","transform","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$makeInverse","mat","det","c","$af95442a94d1862a138c401177ef0c4b$export$toString","join","$8ebfb36ef5532881c5652b708da2c120$export$boundingExtent","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$createEmpty","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$buffer","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$clone","slice","$8ebfb36ef5532881c5652b708da2c120$export$closestSquaredDistanceXY","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$containsCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$containsXY","$8ebfb36ef5532881c5652b708da2c120$export$containsExtent","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdate","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdateEmpty","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","$8ebfb36ef5532881c5652b708da2c120$export$extendFlatCoordinates","$8ebfb36ef5532881c5652b708da2c120$export$equals","$8ebfb36ef5532881c5652b708da2c120$export$extend","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinates","$8ebfb36ef5532881c5652b708da2c120$export$extendXY","min","max","$8ebfb36ef5532881c5652b708da2c120$export$forEachCorner","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$getBottomLeft","$8ebfb36ef5532881c5652b708da2c120$export$getBottomRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopLeft","$8ebfb36ef5532881c5652b708da2c120$export$getArea","area","$8ebfb36ef5532881c5652b708da2c120$export$isEmpty","$8ebfb36ef5532881c5652b708da2c120$export$getWidth","$8ebfb36ef5532881c5652b708da2c120$export$getHeight","$8ebfb36ef5532881c5652b708da2c120$export$getCenter","$8ebfb36ef5532881c5652b708da2c120$export$getCorner","corner","$8ebfb36ef5532881c5652b708da2c120$export$getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$getIntersection","intersection","$8ebfb36ef5532881c5652b708da2c120$export$intersects","$8ebfb36ef5532881c5652b708da2c120$export$applyTransform","transformFn","opt_stops","width","height","xs","ys","l","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$clamp","$916dab65013919ad0345478f9a9f4e0f$export$cosh","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$log2","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$squaredSegmentDistance","t","$916dab65013919ad0345478f9a9f4e0f$export$squaredDistance","$916dab65013919ad0345478f9a9f4e0f$export$toRadians","angleInDegrees","PI","$916dab65013919ad0345478f9a9f4e0f$export$modulo","r","$916dab65013919ad0345478f9a9f4e0f$export$lerp","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$asString","color","$ddc7f5de3664aab559d1c545c366e59d$export$toString","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$fromString","s","MAX_CACHE_SIZE","g","exec","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","$ddc7f5de3664aab559d1c545c366e59d$var$fromNamed","hasAlpha","parseInt","substr","$ddc7f5de3664aab559d1c545c366e59d$export$normalize","map","Number","$ddc7f5de3664aab559d1c545c366e59d$var$fromStringInternal_","$ddc7f5de3664aab559d1c545c366e59d$export$asArray","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$export$shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","$3a8294651627eb74246351f5b596cf68$var$__extends","$3a8294651627eb74246351f5b596cf68$export$default","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","$1935b85c22cfc539ea58e141ab0b37d6$export$default","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","layerState","some","arrayLayerState","$c81aa09fb137106970dbc142b1e89ec3$export$default","createRenderer","hasRenderer","$1935b85c22cfc539ea58e141ab0b37d6$export$inView","viewState","zoom","$29884e9b826cd25109649ab0c360e769$export$equals","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$rotate","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$wrapX","projection","canWrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$29884e9b826cd25109649ab0c360e769$export$getWorldsAway","$52488a0195cf0e38344877f5a3896831$var$__extends","$52488a0195cf0e38344877f5a3896831$export$default","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","callback_1","order","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$default","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_HIDDEN","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_CONTROL","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_COLLAPSED","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$FIREFOX","$2016f251f21b02e27a5ca36c37510540$export$WEBKIT","$2016f251f21b02e27a5ca36c37510540$export$MAC","$2016f251f21b02e27a5ca36c37510540$export$DEVICE_PIXEL_RATIO","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$IMAGE_DECODE","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$PASSIVE_EVENT_LISTENERS","passive","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$replaceNode","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$removeNode","node","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultFillStyle","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultLineCap","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultLineDash","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultLineJoin","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultStrokeStyle","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultTextAlign","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultTextBaseline","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$defaultPadding","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$checkedFonts","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$labelCache","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","div","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$textHeights","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureTextWidth","check","done","fonts","font","clearInterval","setInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureTextHeight","metrics","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","offsetHeight","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureAndCacheTextWidth","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$rotateAtOffset","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$drawImageOrLabel","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$executeLabelInstructions","drawImage","restore","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$2ae21f590be041e7827bf48426c0766a$var$__extends","$2ae21f590be041e7827bf48426c0766a$export$default","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","event_1","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","display","getDataAtPixel","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$default","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$f8e1a00fe597e09d283a3697649a8ad5$export$default","MapEvent","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$default","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","$75ed2fc91ec6cb8478583ef358a9dd4d$export$default","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","$eeb9190850355aed8fc5d92349a26bc6$export$DROP","$eeb9190850355aed8fc5d92349a26bc6$export$default","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$6bfe069e85349c527971d875462feeac$var$__extends","$6bfe069e85349c527971d875462feeac$export$default","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","hifi","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$df0b68b08946bf3d8de6eeca4fba3a5f$export$default","$df0b68b08946bf3d8de6eeca4fba3a5f$export$METERS_PER_UNIT","$c1e1f889297e115e83bec772196e32bf$export$DEFAULT_TILE_SIZE","$1514cc7c23ad291d61b727f0ef5e4246$export$default","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$RADIUS","$7d5079714e2786ec6bee07910f0d8a86$export$HALF_SIZE","$7d5079714e2786ec6bee07910f0d8a86$export$EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$WORLD_EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$MAX_SAFE_Y","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$export$PROJECTIONS","$7d5079714e2786ec6bee07910f0d8a86$export$fromEPSG4326","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$toEPSG4326","atan","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$EXTENT","$655738a66489cc3574c072262645bff6$export$METERS_PER_UNIT","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$export$PROJECTIONS","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$add","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$DEFAULT_RADIUS","$525020a649871896a05d6fe288616b91$export$getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$524e9c84a4c58bd58490804da4c772c6$export$cloneTransform","$524e9c84a4c58bd58490804da4c772c6$export$identityTransform","$524e9c84a4c58bd58490804da4c772c6$export$addProjection","$524e9c84a4c58bd58490804da4c772c6$export$get","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$getPointResolution","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$getTransformFromProjections","vertices","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentProjections","projections","$524e9c84a4c58bd58490804da4c772c6$export$addProjections","$524e9c84a4c58bd58490804da4c772c6$export$createProjection","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$getTransform","$524e9c84a4c58bd58490804da4c772c6$export$transform","$524e9c84a4c58bd58490804da4c772c6$export$transformExtent","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$getUserProjection","$524e9c84a4c58bd58490804da4c772c6$export$toUserCoordinate","$524e9c84a4c58bd58490804da4c772c6$export$fromUserCoordinate","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$toUserExtent","$524e9c84a4c58bd58490804da4c772c6$export$fromUserExtent","$61ba71c2b15c8b7e6577526180db0da5$export$createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$none","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$disable","$4c6a822b604dbfa9a10722399f7335d0$export$none","$8717569d70d85bd7f28c8c1b2c37daee$export$easeIn","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$easeOut","$8717569d70d85bd7f28c8c1b2c37daee$export$inAndOut","$8717569d70d85bd7f28c8c1b2c37daee$export$linear","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentTransforms","$3f4f29b0a4be88d8241f933ff6121a33$export$transform2D","opt_dest","dest","$3f4f29b0a4be88d8241f933ff6121a33$export$rotate","anchor","anchorX","anchorY","k","$a17c336463d573a615343832f6e09aa8$var$__extends","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$default","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","$57ce72c0539154dec2abdc81ffcff6df$export$default","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$57ce72c0539154dec2abdc81ffcff6df$export$getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","$57ce72c0539154dec2abdc81ffcff6df$export$transformGeom2D","simpleGeometry","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$maxSquaredDelta","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$arrayMaxSquaredDelta","ends","$020a0553c73896bfe8e0cfb3e7ff136b$export$assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$020a0553c73896bfe8e0cfb3e7ff136b$export$assignClosestArrayPoint","$e477329667689b6619ea04e4a51dbccc$export$deflateCoordinates","$e477329667689b6619ea04e4a51dbccc$export$deflateCoordinatesArray","coordinatess","opt_ends","jj","$a357f0a07bdcadd773e93ca791a42f7b$export$douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$snap","$a357f0a07bdcadd773e93ca791a42f7b$export$quantize","$a357f0a07bdcadd773e93ca791a42f7b$export$quantizeArray","simplifiedEnds","$c39683e7fcea5e9dae135d728d60cf52$export$inflateCoordinates","opt_coordinates","$c39683e7fcea5e9dae135d728d60cf52$export$inflateCoordinatesArray","opt_coordinatess","$c39683e7fcea5e9dae135d728d60cf52$export$inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","$7641779008ab07f3e708dabdbbb046eb$export$linearRing","twiceArea","$7641779008ab07f3e708dabdbbb046eb$export$linearRings","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$default","LinearRing","maxDelta_","maxDeltaRevision_","getArea","$acd1b863667085614d305475fd6c1d27$var$__extends","$acd1b863667085614d305475fd6c1d27$export$default","Point","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsExtent","outside","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsXY","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingsContainsXY","$67787df47ebd352536b767ba5aa6ea83$export$getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$419a691625de72e89acadcc033e1165f$export$forEach","ret","point1","point2","$32ab876027ca0904f46063bee68b73aa$export$intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRingArray","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRing","$221ffa684d4ba252080508824e602b78$export$coordinates","$52f5ef13e882c7db8132623a2b51ee49$export$linearRingIsClockwise","edge","$52f5ef13e882c7db8132623a2b51ee49$export$linearRingsAreOriented","opt_right","right","isClockwise","$52f5ef13e882c7db8132623a2b51ee49$export$orientLinearRings","$52f5ef13e882c7db8132623a2b51ee49$export$orientLinearRingsArray","$bffbcd35af658c4477627697774de1c2$var$__extends","$bffbcd35af658c4477627697774de1c2$export$default","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","$bffbcd35af658c4477627697774de1c2$export$fromExtent","XY","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","$19fadbefe1b7e34cc76223b5c3e441cc$export$default","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","$19fadbefe1b7e34cc76223b5c3e441cc$export$createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getCenter","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","CIRCLE","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","CENTER","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","$8556eff40cf4f1624cd78ff7ea054c5b$export$toSize","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","$b198bbb8a7fca092de94dd3a772c1343$export$default","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","toString","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","KEYDOWN","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","INTERACTING","lowOnFrameBudget","time","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$8316c877d328ebfc4f4b917229eec057$var$__extends","$8316c877d328ebfc4f4b917229eec057$export$default","Control","target_","listenerKeys","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","$194d017bd833b991c2c712fa2ff5b0e5$export$default","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$aef56543978371a8090d728a4f107ac0$var$__extends","$aef56543978371a8090d728a4f107ac0$export$default","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","$9812beea87bdcda9027d52b89085c87c$var$__extends","$9812beea87bdcda9027d52b89085c87c$export$default","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","$1ad0cf5090e3852174414bfc8cc27b9e$export$default","Interaction","setActive","active","$1ad0cf5090e3852174414bfc8cc27b9e$export$pan","$1ad0cf5090e3852174414bfc8cc27b9e$export$zoomByDelta","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","$4eeedd039b7e6d5b8277b175715f9541$export$default","DoubleClickZoom","delta_","stopEvent","shiftKey","$0714aed143b912743afff175db44c1dc$var$__extends","$0714aed143b912743afff175db44c1dc$export$default","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$0714aed143b912743afff175db44c1dc$export$centroid","$054715504eaffdc825d0a6ada99ec596$export$all","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$altShiftKeysOnly","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$focusWithTabindex","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$focus","$054715504eaffdc825d0a6ada99ec596$export$always","$054715504eaffdc825d0a6ada99ec596$export$mouseActionButton","$054715504eaffdc825d0a6ada99ec596$export$noModifierKeys","$054715504eaffdc825d0a6ada99ec596$export$shiftKeyOnly","$054715504eaffdc825d0a6ada99ec596$export$targetNotEditable","tagName","$054715504eaffdc825d0a6ada99ec596$export$mouseOnly","pointerType","$054715504eaffdc825d0a6ada99ec596$export$primaryAction","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","$959ec1b544453a9fa4f0e9221c3bb0b0$export$default","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","distance","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$var$__extends","$719e5208cd50905e41bacbcae2219883$export$default","DragRotate","lastAngle_","$d0055a036577a61fd8306330947568c7$var$__extends","$d0055a036577a61fd8306330947568c7$export$default","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$DragBoxEvent","DragBoxEvent","$275b26378704892d776581791f32dc0e$export$default","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","$b5cd6c68e27395a36aa4c8d3c5395250$export$default","DragZoom","out_","out","mapExtent","boxPixelExtent","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$default","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","UP","mapUnitsDelta","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","$55ea853e77e2fe25fa1a8793cb31a3bf$export$default","KeyboardZoom","KEYPRESS","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$default","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","$f7a99b9e7b1a72242a3eb408b28d3563$export$Mode","$f7a99b9e7b1a72242a3eb408b28d3563$export$default","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$default","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$var$__extends","$601b81cfcc535d77832cc96f04e942a1$export$default","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","$976448907138da16f7612e32ecc55ac7$var$__extends","$976448907138da16f7612e32ecc55ac7$export$default","Map","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$8af1af76f23419d9d724a1b0182ffb00$var$__extends","$8af1af76f23419d9d724a1b0182ffb00$export$default","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$8af1af76f23419d9d724a1b0182ffb00$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$508255911b6472d9d16e9a97599ab01e$export$default","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$508255911b6472d9d16e9a97599ab01e$export$transformGeometryWithOptions","write","transformed","decimals","power_1","$1a6c956f7a172f55a86db631d141a623$var$__extends","$1a6c956f7a172f55a86db631d141a623$export$default","JSONFeature","readFeatureFromObject","$1a6c956f7a172f55a86db631d141a623$var$getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","$168654b72fccbd53f77518b62ff915e1$export$interpolatePoint","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$168654b72fccbd53f77518b62ff915e1$export$lineStringCoordinateAtM","extrapolate","lo","hi","m0","$c028848ec55b72b61f5eaf0ec6396be2$export$lineStringLength","$f3208b74dbadea817236410092d4ed69$var$__extends","$f3208b74dbadea817236410092d4ed69$export$default","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$9cc45ed4bf6c6f99d7b74c7015645e2b$var$__extends","$9cc45ed4bf6c6f99d7b74c7015645e2b$export$default","MultiLineString","lineStrings","appendLineString","multiLineString","opt_interpolate","interpolate","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","$0c87ec0f12a2b62262bf5859757b8a2b$var$__extends","$0c87ec0f12a2b62262bf5859757b8a2b$export$default","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","$3f89ce735a32ce0bc16220a89ae67b2f$var$__extends","$3f89ce735a32ce0bc16220a89ae67b2f$export$default","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","getEndss","getFlatInteriorPoints","interiorPoints","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","$5d8566a0c1419db39058842324e9a300$var$__extends","$5d8566a0c1419db39058842324e9a300$export$default","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","$5d8566a0c1419db39058842324e9a300$var$readGeometry","geoJSONFeatures","crs","$5d8566a0c1419db39058842324e9a300$var$writeGeometry","objects","$5d8566a0c1419db39058842324e9a300$var$readPointGeometry","$5d8566a0c1419db39058842324e9a300$var$readLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$readPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiPointGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$readMultiPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$readGeometryCollectionGeometry","geoJSON","$5d8566a0c1419db39058842324e9a300$var$writePointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeLineStringGeometry","rightHanded","$5d8566a0c1419db39058842324e9a300$var$writePolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPointGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiLineStringGeometry","$5d8566a0c1419db39058842324e9a300$var$writeMultiPolygonGeometry","$5d8566a0c1419db39058842324e9a300$var$writeGeometryCollectionGeometry","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","$ab70eb0a0a56b112261264db1ea7acab$export$default","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ae15ed96a99c1303ea67938747c94fca$var$__extends","$ae15ed96a99c1303ea67938747c94fca$export$default","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$ac230d10056414a40eb774bd091234f1$var$__extends","$ac230d10056414a40eb774bd091234f1$export$default","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","renderCoordinate","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$6a958d3d10a45fbc13d601def6cb4731$export$default","TileRange","containsTileRange","getHeight","getWidth","$6a958d3d10a45fbc13d601def6cb4731$export$createOrUpdate","$21101e8f6691f861098a74ca233ba3e1$var$__extends","$21101e8f6691f861098a74ca233ba3e1$export$default","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","LOADED","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alpha","alphaChanged","endTransition","getImage","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$7f639b92eb9591e7aded56644548f656$var$__extends","$7f639b92eb9591e7aded56644548f656$export$default","TileLayer","u","_maxEntries","_minEntries","leaf","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","$a51010926fccd7fa7fa549e12811b655$exports","RBush","$96f7f946d494434256fc7391bfca3d81$export$default","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$7eb24b24c1bb92b5f48477cc7ed0ef45$export$asColorLike","$9395bcf7fa5c622dff9d678b4abf4bba$var$__extends","$9395bcf7fa5c622dff9d678b4abf4bba$export$default","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","getFill","getRadius","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","$19d3c8bef588e205c4ab8014047de833$var$__extends","$19d3c8bef588e205c4ab8014047de833$export$default","CircleStyle","setRadius","$e1f9f7b0a69ff9a9f4c2bbbdfef410b1$export$default","Fill","color_","setColor","$4c58aec149e538982cbf4e874e866484$export$default","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b550892c9c7d6707a4415bf7976deb12$export$default","Style","geometryFunction_","$b550892c9c7d6707a4415bf7976deb12$var$defaultGeometryFunction","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b550892c9c7d6707a4415bf7976deb12$var$defaultStyles","$b550892c9c7d6707a4415bf7976deb12$export$createDefaultStyle","$ceed79ad4f0d8f0ebaf810c3cca30983$var$__extends","$ceed79ad4f0d8f0ebaf810c3cca30983$var$Property","$ceed79ad4f0d8f0ebaf810c3cca30983$export$default","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$75febe525c6e0d71892cea5e044a142c$export$default","$75febe525c6e0d71892cea5e044a142c$export$fillInstruction","$75febe525c6e0d71892cea5e044a142c$export$strokeInstruction","$75febe525c6e0d71892cea5e044a142c$export$beginPathInstruction","$75febe525c6e0d71892cea5e044a142c$export$closePathInstruction","$98c4b84222a5e84ec508cd638c4e0b8c$export$default","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$ca67e4c506ae561bc3174e981b55d257$var$__extends","$ca67e4c506ae561bc3174e981b55d257$export$default","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","MULTI_POLYGON","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$072d5e6cee1f9ae87cd55eb588566cc6$var$__extends","$072d5e6cee1f9ae87cd55eb588566cc6$export$default","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","$28ceeb2640c662153e0cc1bb27e7eea9$var$__extends","$28ceeb2640c662153e0cc1bb27e7eea9$export$default","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f5fec2e7653cdbd2c7958b8312f0d7d6$var$__extends","$f5fec2e7653cdbd2c7958b8312f0d7d6$export$default","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","SET_FILL_STYLE","circleInstruction","$f19e98a3c9584b88eb9c26a752a19276$export$matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$7e7051822986fcb02ea0e43ac0707b32$var$__extends","$7e7051822986fcb02ea0e43ac0707b32$export$TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$7e7051822986fcb02ea0e43ac0707b32$export$default","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","geometryWidths","saveTextStates_","backgroundFill","backgroundStroke","p0","p1","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$4f54cdaa0352e7689a6e30aa9d8207ec$var$BATCH_CONSTRUCTORS","Circle","$f5fec2e7653cdbd2c7958b8312f0d7d6$exports","Default","$ca67e4c506ae561bc3174e981b55d257$exports","$072d5e6cee1f9ae87cd55eb588566cc6$exports","$28ceeb2640c662153e0cc1bb27e7eea9$exports","Text","$7e7051822986fcb02ea0e43ac0707b32$exports","$4f54cdaa0352e7689a6e30aa9d8207ec$export$default","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$56c23dc34f9f14c7874ab5d8b63c5fb3$export$drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$tmpExtent","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p1","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p2","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p3","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$p4","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$rtlRegEx","fromCharCode","$6cf1557e9efeeb4d32c6b7acaeb9c268$var$horizontalTextAlign","align","test","$6cf1557e9efeeb4d32c6b7acaeb9c268$export$default","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","renderWidth","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$c6e46405591acfe99e5a94d22fbe8573$var$ORDER","POLYGON","LINE_STRING","IMAGE","TEXT","$c6e46405591acfe99e5a94d22fbe8573$export$default","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$c6e46405591acfe99e5a94d22fbe8573$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$c6e46405591acfe99e5a94d22fbe8573$export$getPixelIndexArray","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$9f8df4495769241e9ec70201b90e0eaa$var$__extends","$9f8df4495769241e9ec70201b90e0eaa$export$default","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$e65a38a3837120ad833711b5930f5912$var$__extends","$e65a38a3837120ad833711b5930f5912$export$default","ImageBase","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","$2fc4e1887f4ffa14e16ea647fd21482c$export$listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","$92a5ba3fab046f40ee35c464c4cf79b4$var$__extends","$92a5ba3fab046f40ee35c464c4cf79b4$var$taintedTestContext","$92a5ba3fab046f40ee35c464c4cf79b4$export$default","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","IDLE","ctx","globalCompositeOperation","imgData","putImageData","$92a5ba3fab046f40ee35c464c4cf79b4$export$get","$4de6336f82b6fd9bc7cf688bb41b8b96$var$__extends","$4de6336f82b6fd9bc7cf688bb41b8b96$export$default","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","FRACTION","TOP_LEFT","setAnchor","iconImageSize","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$defaultOrder","feature1","feature2","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$getTolerance","$4480b5f4b6f69a5829dd2449dbe6a6c8$export$renderFeature","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderGeometry","$4480b5f4b6f69a5829dd2449dbe6a6c8$var$renderFeatureInternal","$c2243072b6513ba407326b2a30b1374a$var$__extends","$c2243072b6513ba407326b2a30b1374a$export$default","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","executorGroup","vectorSource","endWorld","world","clipped","Promise","resolve","transforms","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","canvas_1","imgContext","iconContext","byGeometryType","POINT","zIndexKeys","geomAndStyle","kk","resultFeatures","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","declutterBuilderGroup","userTransform","loadFeatures","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$2f5ed0ce65ecb2bfe439d05296b3d36a$var$__extends","$2f5ed0ce65ecb2bfe439d05296b3d36a$export$default","VectorLayer","$e311f93de68f58225dfc37d89d1dcffc$export$default","opt_maxEntries","rbush_","items_","extents","items","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","$6a9611a0560ac769e67fadc6cfef9a2c$export$default","Source","attributions_","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","attributionLike","$26b846260444bc742bddf88d96721338$export$all","$2ef5772bb5b0926a9ba82fc2a88f3163$export$xhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2ef5772bb5b0926a9ba82fc2a88f3163$export$loadFeaturesXhr","addFeatures","$76e99b295c09c7c5e340e251e89879b1$var$__extends","$76e99b295c09c7c5e340e251e89879b1$export$VectorSourceEvent","VectorSourceEvent","opt_feature","opt_features","$76e99b295c09c7c5e340e251e89879b1$export$default","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","$6ea2e09c0ee686e4fcf344e90f929221$export$default","Tile","interimTile","transition_","transitionStarts_","release","refreshInterimChain","getTileCoord","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","$69031f3b45b1bb2d223c45e6bbe47b36$export$default","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$default","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetCoverageX","targetQuadExtent","isFinite","isNotFinite","centerSrc","centerSrcEstimX","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","u1","v1","u2","v2","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$render","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","augmentedMatrix","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","$97e37be8733b1927a1ed959b854a8d18$var$__extends","$97e37be8733b1927a1ed959b854a8d18$export$default","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","leftToLoad_1","LOADING","sourceListenKey_1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$default","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$createOrUpdate","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$getKeyZXY","$c98d704946f2a3a0e1335bd43bccb465$export$getKey","$8328c42c04c9adada69111ec662476d9$var$__extends","$8328c42c04c9adada69111ec662476d9$export$default","TileCache","pruneExceptNewestZ","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$default","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$getForProjection","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$extentFromProjection","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForProjection","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","$cde35ab3df9629f8ffd26ea2f187b41e$export$default","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$cde35ab3df9629f8ffd26ea2f187b41e$export$TileSourceEvent","TileSourceEvent","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplates","templates","tileUrlFunctions","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTileUrlFunctions","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","$671acdd0ca89710db49a7e8e41335e8e$export$default","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","ERROR","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$export$default","TileImage","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$export$default","XYZ","xyzOptions","gridOptions","$ff8235042efbfb69f46b35131190fa2b$var$__extends","$ff8235042efbfb69f46b35131190fa2b$export$default","OSM","api","$f7cc2df98f0dd786ece54ee206a6d458$var$index","$f7cc2df98f0dd786ece54ee206a6d458$var$files","$f7cc2df98f0dd786ece54ee206a6d458$var$file","$f7cc2df98f0dd786ece54ee206a6d458$var$view","$f7cc2df98f0dd786ece54ee206a6d458$var$a","$f7cc2df98f0dd786ece54ee206a6d458$var$c","$f7cc2df98f0dd786ece54ee206a6d458$var$d","$f7cc2df98f0dd786ece54ee206a6d458$var$b","$f7cc2df98f0dd786ece54ee206a6d458$var$map","interrections","onkeyup","$f7cc2df98f0dd786ece54ee206a6d458$var$q","lonLat","lon","blob","Blob","saveAs"],"version":3,"file":"index.15523e81.js.map"}